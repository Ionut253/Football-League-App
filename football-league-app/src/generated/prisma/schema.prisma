generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Player {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(100)
  position    String?   @db.VarChar(50)
  age         Int?
  nationality String?   @db.VarChar(100)
  team_id     Int
  createdAt   DateTime? @default(now()) @db.Timestamp(6)
  updatedAt   DateTime? @default(now()) @db.Timestamp(6)
  team        Team      @relation(fields: [team_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([team_id])
  @@index([position])
  @@index([nationality])
}

model Team {
  id             Int       @id @default(autoincrement())
  name           String    @unique @db.VarChar(100)
  abbreviation   String?   @db.VarChar(10)
  coach_name     String?   @db.VarChar(100)
  home_stadium   String?   @db.VarChar(100)
  founded_year   Int?
  wins           Int?      @default(0)
  draws          Int?      @default(0)
  losses         Int?      @default(0)
  goals_scored   Int?      @default(0)
  goals_conceded Int?      @default(0)
  country        String?   @db.VarChar(100)
  createdAt      DateTime? @default(now()) @db.Timestamp(6)
  updatedAt      DateTime? @default(now()) @db.Timestamp(6)
  players        Player[]
  userId         Int
  user           User      @relation(fields: [userId], references: [id])

  @@index([wins])
  @@index([goals_scored])
  @@index([country])
  @@index([abbreviation])
}

enum Role {
  GUEST
  ADMIN
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique @db.VarChar(255)
  password    String   @db.VarChar(255)
  role        Role     @default(GUEST)
  teams       Team[]
  logs        Log[]
  isMonitored Boolean  @default(false)
  createdAt   DateTime @default(now()) @db.Timestamp(6)
  updatedAt   DateTime @updatedAt @db.Timestamp(6)

  @@index([email])
  @@index([role])
}

model Log {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  action    String
  entity    String
  entityId  Int?
  details   String?
  createdAt DateTime @default(now()) @db.Timestamp(6)

  @@index([userId])
  @@index([action])
  @@index([createdAt])
}
